<Lems
      xmlns="http://www.neuroml.org/lems/0.7.4"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.neuroml.org/lems/0.7.4 ../../LEMS/Schemas/LEMS/LEMS_v0.7.4.xsd"
      description="A number of ComponentTypes for rate based/population models.
                    Base type of any cell/population which has a (dimensionless) rate _R.
                    Generic nonlinear 2-D (phase plane) oscillator.">

    <ComponentType name="rWongWang"
                   description="Rate based 2D oscillator for TVB"
                   value="">

        <Requirement name="MODEL_LIMIT" dimension="(-5, 5), (-5, 5)"/> <!-- put helping functions in util, select wrapping functions.  -->

<!--        Look at vector implementation for multi heterogenous nodes.-->

        <Constant name="w_plus" symbol="NArray" value="1.4f" dimension="lo=0.0, hi=2.0, step=0.01"
                  description="Excitatory population recurrence weight"/>
        <Constant name="a_E" symbol="NArray" dimension="lo=0., hi=500., step=1." value="310.0f" description="[n/C]. Excitatory population input gain parameter, chosen to fit numerical solutions."/>
        <Constant name="b_E" symbol="NArray" dimension="lo=0., hi=200., step=1." value="125.0f" description="[Hz]. Excitatory population input shift parameter chosen to fit numerical solutions."/>
        <Constant name="d_E" symbol="NArray" dimension="lo=-10.0, hi=10.0, step=0.01" value="0.154f" description="[s]. Excitatory population input scaling parameter chosen to fit numerical solutions."/>
        <Constant name="a_I" symbol="NArray" dimension="lo=0., hi=1000., step=1." value="615.0f" description="[n/C]. Inhibitory population input gain parameter, chosen to fit numerical solutions."/>
        <Constant name="b_I" symbol="NArray" dimension="lo=0.0, hi=200.0, step=1.0" value="177.0f" description="[Hz]. Inhibitory population input shift parameter chosen to fit numerical solutions."/>
        <Constant name="d_I" symbol="NArray" dimension="lo=0.0, hi=0.2, step=0.001" value="0.087f" description="[s]. Inhibitory population input scaling parameter chosen to fit numerical solutions."/>
        <Constant name="gamma_E" symbol="NArray" dimension="lo=0.0, hi=1.0/1000, step=0.01/1000" value="0.641f / 1000.0f" description="Excitatory population kinetic parameter"/>
        <Constant name="tau_E" symbol="NArray" dimension="lo=50., hi=150., step=1." value="100.0f" description="[ms]. Excitatory population NMDA decay time constant."/>
        <Constant name="tau_I" symbol="NArray" dimension="lo=5., hi=100., step=1.0" value="=10.0f" description="[ms]. Inhibitory population NMDA decay time constant."/>
        <Constant name="I_0" symbol="NArray" dimension="lo=0.0, hi=1.0, step=0.001" value="0.382f" description="[nA]. Effective external input"/>
        <Constant name="w_E" symbol="NArray" dimension="lo=0.0, hi=2.0, step=0.01" value="1.0f" description="Excitatory population external input scaling weight"/>
        <Constant name="w_I" symbol="NArray" dimension="lo=0.0, hi=1.0, step=0.01" value="0.7f" description="Inhibitory population external input scaling weight"/>
        <Constant name="gamma_I" symbol="NArray" dimension="lo=0.0, hi=2.0/1000, step=0.01/1000" value="1.0f / 1000.0f" description="Inhibitory population kinetic parameter"/>
        <Constant name="min_d_E" symbol="NArray" dimension="" value="-1.0f * d_E" description="Only in CUDA"/>
        <Constant name="min_d_I" symbol="NArray" dimension="" value="-1.0f * d_I" description="Only in CUDA"/>
        <Constant name="imintau_E" symbol="NArray" dimension="" value="-1.0f / tau_E" description="Only in CUDA"/>
        <Constant name="imintau_I" symbol="NArray" dimension="" value="-1.0f / tau_I" description="Only in CUDA"/>
        <Constant name="w_E__I_0" symbol="NArray" dimension="" value="w_E * I_0" description="Only in CUDA"/>
        <Constant name="w_I__I_0" symbol="NArray" dimension="" value="w_I * I_0" description="Only in CUDA"/>

        <Constant name="J_N" symbol="NArray" dimension="lo=0.001, hi=0.5, step=0.001" value="0.15" description="[nA] NMDA current"/>
        <Constant name="J_I" symbol="NArray" dimension="lo=0.001, hi=2.0, step=0.001" value="1.0" description="[nA] Local inhibitory current"/>
        <Constant name="G" symbol="NArray" dimension="lo=0.0, hi=10.0, step=0.01" value="2.0" description="Global coupling scaling"/>
        <Constant name="lamda" symbol="NArray" dimension="lo=0.0, hi=1.0, step=0.01" value="0.0" description="Inhibitory global coupling scaling"/>

        <!-- Parameters will be assumed to be swept. sweep data will be matched by order of entry -->
        <Parameter name="global_coupling" dimension="float" />
        <Parameter name="global_speed" dimension="float" />

        <Dynamics>
            <StateVariable name="V" dimension="-2.0, 4.0" exposure="V"/>
            <StateVariable name="W" dimension="-6.0, 6.0"/>

<!--            <DerivedVariable name="coupling_value" exposure="c_0" value="0.0" reduce="add"/>-->
            <DerivedVariable name="nsig" exposure="float" value="sqrt(dt) * sqrt(2.0 * 1e-3)" reduce="add"/>
            <DerivedVariable name="rec_speed_dt" exposure="float" value="1.0f / global_speed / (dt)" reduce="add"/>
<!--            <DerivedVariable name="G" exposure="float" value="params" reduce="add"/>-->
            <DerivedVariable name="lc_0" exposure="float" value="0.0"/>

            <TimeDerivative variable="tmp_I_E" value="a_E * (w_E__I_0 + w_plus__J_NMDA * S_E + sum - JI*S_I) - b_E"/>
            <TimeDerivative variable="tmp_H_E" value="tmp_I_E/(1.0-exp(min_d_E * tmp_I_E))"/>
            <TimeDerivative variable="tmp_I_I" value="(a_I*((w_I__I_0+(J_NMDA * S_E))-S_I))-b_I"/>
            <TimeDerivative variable="tmp_H_I" value="tmp_I_I/(1.0-exp(min_d_I*tmp_I_I))"/>

            <TimeDerivative variable="dV" exposure="dV" value="(imintau_E* S_E)+(tmp_H_E*(1-S_E)*gamma_E)"/>
            <TimeDerivative variable="dW" exposure="dW" value="(imintau_I* S_I)+(tmp_H_I*gamma_I)"/>
        </Dynamics>

        <!-- Exposures are used for observables, for the name enter variable to be observed (usually states)
        and for dimension enter the reduction functionality-->
        <Exposure name="V" dimension="sin(V)"/>
        <Exposure name="W" dimension="sin(W)"/>

    </ComponentType>

    <ComponentType name="coupling_function">

<!--        Added function for pre and post synaptic activity. Fixed the power being **, however no parse checks for it-->

        <Constant name="a" symbol="NArray" dimension="lo=0.0, hi=10., step=0.1" value="0.1" description="Rescales the connection strength."/>

<!--        variables for pre synaptic function-->
        <Parameter name="V" dimension=''/>
        <Parameter name="V_j" dimension=''/>

<!--        variables for post synaptic function-->
        <Requirement name="wij" dimension=''/>

        <Function name="pre" value="sin(V_j - V)" description = "pre synaptic function for coupling activity"/>
        <Function name="post" value="wij" description = "post synaptic function for coupling activity"/>

        <!-- Handle local coupling result, full expression is c_0 *= 'value'. Name option is hardcoded -->
        <DerivedParameter name="c_0" value="global_coupling * global_speed"/>

    </ComponentType>

    <ComponentType name="connectivity matrix">

        <Parameter name="propagation_speed" dimension="float" value="1" numeric_value="2" description="3" fixed="5" fixed_value="="/>

<!--        Datastructure containing region_labels, tract_lengths, speed and weights-->
<!--        connectivity.py-->

    </ComponentType>

    <ComponentType name="noise">

<!--        Param a-->
<!--        Related to exposures?-->

<!--        StateVariables for certain noises-->
<!--        parant noise of specific children-->
<!--        ScalingFunction GFUN; noisescaling-->

<!-- dimension field for Constant is being (mis)used for fields required for Float (True or False), domain for NArray (lo, hi, step) or field_type for Attr ('str') ) -->
<!--        is label more than a short description? -->

        <Constant name="ntau" symbol="Float" dimension="True" value="0.1" description="The noise correlation time"/>
        <Constant name="noise_seed" symbol="Int" dimension="" value="42" description="A random seed used to initialise the random_stream if it is missing."/>
        <Constant name="random_stream" symbol="Attr" dimension="numpy.random.RandomState" value="0.0" description="An instance of numpy's RandomState associated with this
            specific Noise object. Used when you need to resume a simulation from a state saved to disk"/>
<!--        <Requirement name="temperature" dimension="temperature"/>-->

    </ComponentType>

    <ComponentType name="additive" extends="noise">

<!--        specific child of noise-->
        <Constant name="nsig" symbol="NArray" dimension="lo=0.0, hi=10.0, step=0.1" value="1.0"
            description="The noise dispersion, it is the standard deviation of the
distribution from which the Gaussian random variates are drawn. NOTE:
Sensible values are typically ~gt 1% of the dynamic range of a Model's
state variables."/>

    </ComponentType>

        <ComponentType name="multiplicative" extends="noise">

<!--        specific https://gitlab.version.fz-juelich.de/diaz1/tvb_dslchild of noise-->
            <Constant name="nsig" symbol="NArray" dimension="lo=0.0, hi=10.0, step=0.1" value="1.0"
            description="The noise dispersion, it is the standard deviation of the
distribution from which the Gaussian random variates are drawn. NOTE:
Sensible values are typically ~gt 1% of the dynamic range of a Model's
state variables."/>

            <Constant name="b" symbol="Attr" dimension="equations.TemporalApplicableEquation" value="0.0"
            description="A function evaluated on the state-variables, the result of which enters as the diffusion coefficient."/>

    </ComponentType>



</Lems>


<!--Look at vector representation in XML LEMS-->